<script type="text/javascript">

 $(document).ready(function() {

     var resourceName = "<%= resource_name %>";

     // flag = show all records, or only those that the user created
     <% if can? :manage, model_class  %>
     var showOnlyRecordsCreatedByUser = 0;
     <% else %>
     var showOnlyRecordsCreatedByUser = 1;
     <% end %>

     // Subclass of SDBM.ManageRecords tailored for display of names (ie users)
     var ManageNames = function(options) {
         SDBM.ManageRecords.call(this, options);
     };
     
     ManageNames.prototype = Object.create(SDBM.ManageRecords.prototype);

     ManageNames.prototype.getColumns = function() {
        var manageRecords = this;

        return [
            {
                title: '',
                orderable: false,
                render: function (data, type, full, meta) {
                    if(manageRecords.getUnreviewedOnly() === 1) {
                        return '<input type="checkbox" checked="checked" name="review" value="' + full[manageRecords.dataTable.getColumnIndex("ID")] + '"/>';
                    }
                    return '';
                },
                width: "5%"
            },
            {
                title: 'Options',
                orderable: false,
                render: function (data, type, full, meta) {
                    var str = '<a href="/' + manageRecords.options.resourceName + '/' + data + '/edit/">Edit</a> '
                            + '&middot; <a class="delete-link" href="/' + manageRecords.options.resourceName + '/' + data + '.json">Delete</a>';
                    return str;
                },
                width: "10%"
            },
            {
                sdbmssMinWidth: "150px",
                title: 'ID',
                width: "10%",
                render: function (data, type, full, meta) { 
                    var str = '<a href="/' + manageRecords.options.resourceName + '/' + data + '/">SDBM_NAME_' + data + '</a>';
                    return str;
                },
                dbSortField: 'id'
            },
            {
                title: 'Name',
                width: "45%",
                dbSortField: manageRecords.options.searchNameField
            },
            {
                title: 'As Author',
                width: "10%",
                dbSortField: 'authors_count'
            },
            {
                title: 'As Artist',
                width: "10%",
                dbSortField: 'artists_count'
            },
            {
                title: 'As Scribe',
                width: "10%",
                dbSortField: 'scribes_count'
            },
            {
                title: 'As Source Agent',
                width: "10%",
                dbSortField: 'source_agents_count'
            },
            {
                title: 'As Prov Agent',
                width: "10%",
                dbSortField: 'event_agents_count'
            },
            {
                title: 'Reviewed',
                width: "10%",
                dbSortField: 'reviewed'
            },
            {
                title: 'Created By',
                width: "10%",
                dbSortField: 'created_by_id'
            }
        ];
     };

     ManageNames.prototype.searchResultToTableRow = function (result) {
         return [
             null,
             result.id,
             result.id,
             result[this.options.searchNameField],
             result.authors_count,
             result.artists_count,
             result.scribes_count,
             result.source_agents_count,
             result.event_agents_count,
             result.reviewed.toString(),
             result.created_by || ""
         ];
     };

     new ManageNames({
         resourceName: "<%= resource_name %>",
         showOnlyRecordsCreatedByUser: showOnlyRecordsCreatedByUser,
         searchNameField: "name"
     });

 });

</script>

