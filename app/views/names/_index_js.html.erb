<script type="text/javascript">

 $(document).ready(function() {

     var resourceName = "<%= resource_name %>";

     // flag = show all records, or only those that the user created
     <% if can? :manage, model_class %>
     var showOnlyRecordsCreatedByUser = 0;
     <% else %>
     var showOnlyRecordsCreatedByUser = 1;
     <% end %>

     <% if can? :merge, model_class  %>
     var canMerge = 1;
     <% else %>
     var canMerge = 0;
     <% end %>

     // Subclass of SDBM.ManageRecords tailored for display of names (ie users)
     var ManageNames = function(options) {
         SDBM.ManageRecords.call(this, options);
     };
     
     ManageNames.prototype = Object.create(SDBM.ManageRecords.prototype);

     ManageNames.prototype.getColumns = function() {
        var manageRecords = this;

        return [
            {
                sdbmssMinWidth: "20px",
                sdbmssMaxWidth: "20px",
                title: '<a href="#" class="btn btn-default btn-xs glyphicon glyphicon-unchecked hideIfReviewed" id="select-all"></a>',
                orderable: false,
                className: 'text-center',
                render: function (data, type, full, meta) {
                    if(manageRecords.getUnreviewedOnly() === 1) {
                        return  '' + 
                                '<input class="table-checkbox" type="checkbox" name="review" value="' + full[manageRecords.dataTable.getColumnIndex("ID")] + '" id="checkbox_' + meta.row + '"/>' + 
                                '<label for="checkbox_' + meta.row + '">' + 
                                '<a class="btn btn-default btn-xs glyphicon glyphicon-unchecked unchecked"></a>' + 
                                '<a class="btn btn-default btn-xs glyphicon glyphicon-check checked"></a>' + 
                                '</label>' + '';
                        //return '<input type="checkbox" name="review" value="' + full[manageRecords.dataTable.getColumnIndex("ID")] + '"/>';
                    }
                    return '';
                }
            },
            {
                sdbmssMinWidth: "145px",
                sdbmssMaxWidth: "145px",
                title: 'Options',
                orderable: false,
                render: function (data, type, full, meta) {
                    var mergeLink = canMerge ? '<a class="btn btn-xs btn-info merge-link" href="/' + manageRecords.options.resourceName + '/' + data + '/merge">Merge</a>' : '';
                    var str = '<span class="btn-group options-btn-group">'
                            + '<a onclick="addBookmark(' + data + ', \'Name\');" class="btn btn-xs btn-default control-bookmark bookmark-link" in_bookmarks="/names/' + data + '">' 
                                + '<span class="glyphicon glyphicon-bookmark"></span></a>'
                            + '<a class="btn btn-xs btn-success" href="/' + manageRecords.options.resourceName + '/' + data + '/edit/">Edit</a>'
                            + '<a class="btn btn-xs btn-danger delete-link" href="/' + manageRecords.options.resourceName + '/' + data + '.json">Delete</a>'
                            + mergeLink + "</span>";
                    return str;
                },
            },
            {
                sdbmssMinWidth: "130px",
                sdbmssMaxWidth: "130px",
                title: 'ID',
                render: function (data, type, full, meta) { 
                    var str = '<a href="/' + manageRecords.options.resourceName + '/' + data + '/">SDBM_NAME_' + data + '</a>';
                    return str;
                },
                dbSortField: 'id'
            },
            {
                sdbmssMinWidth: "250px",
                sdbmssMaxWidth: "250px",
                title: 'Name',
                dbSortField: manageRecords.options.searchNameField
            },
            {
                sdbmssMinWidth: "90px",
                sdbmssMaxWidth: "90px",
                title: 'VIAF ID',
                render: function (data, type, full, meta) {
                    var str = "";
                    if(data) {
                        str = '<a target="_blank" href="http://viaf.org/viaf/' + data + '/">' + data + '</a>';
                    }
                    return str;
                },
                dbSortField: 'viaf_id'
            },
            {
                sdbmssMinWidth: "75px",
                sdbmssMaxWidth: "75px",
                title: 'As Author',
                dbSortField: 'authors_count'
            },
            {
                sdbmssMinWidth: "75px",
                sdbmssMaxWidth: "75px",
                title: 'As Artist',
                dbSortField: 'artists_count'
            },
            {
                sdbmssMinWidth: "75px",
                sdbmssMaxWidth: "75px",
                title: 'As Scribe',
                dbSortField: 'scribes_count'
            },
            {
                sdbmssMinWidth: "85px",
                sdbmssMaxWidth: "85px",
                title: 'As Source Agent',
                dbSortField: 'source_agents_count'
            },
            {
                sdbmssMinWidth: "75px",
                sdbmssMaxWidth: "75px",
                title: 'As Sale Agent',
                dbSortField: 'sale_agents_count'
            },
            {
                sdbmssMinWidth: "75px",
                sdbmssMaxWidth: "75px",
                title: 'As Prov Agent',
                dbSortField: 'provenance_count'
            },
            {
                sdbmssMinWidth: "75px",
                sdbmssMaxWidth: "75px",
                title: 'Reviewed',
                dbSortField: 'reviewed'
            },
            {
                sdbmssMinWidth: "90px",
                sdbmssMaxWidth: "90px",
                title: 'Created By',
                dbSortField: 'created_by'
            },
            {
                sdbmssMinWidth: "90px",
                sdbmssMaxWidth: "90px",
                title: 'Created On',
                dbSortField: 'created_at'
            },
            {
                sdbmssMinWidth: "90px",
                sdbmssMaxWidth: "90px",
                title: 'Updated By',
                dbSortField: 'updated_by'
            },
            {
                sdbmssMinWidth: "90px",
                sdbmssMaxWidth: "90px",
                title: 'Updated On',
                dbSortField: 'updated_at'
            }
        ];
     };

     ManageNames.prototype.searchResultToTableRow = function (result) {
         return [
             null,
             result.id,
             result.id,
             result[this.options.searchNameField],
             result.viaf_id,
             result.authors_count,
             result.artists_count,
             result.scribes_count,
             result.source_agents_count,
             result.sale_agents_count,
             result.provenance_count,
             result.reviewed.toString(),
             result.created_by || "",
             result.created_at || "",
             result.updated_by || "",
             result.updated_at || ""
         ];
     };

     new ManageNames({
         resourceName: "<%= resource_name %>",
         resourceNameSingular: "<%= resource_name.singularize %>",
         resourceNamePlural: "<%= resource_name.pluralize %>",
         showOnlyRecordsCreatedByUser: showOnlyRecordsCreatedByUser,
         searchNameField: "name"
     });

 });

</script>

