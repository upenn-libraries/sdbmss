<script type="text/javascript">

 $(document).ready(function() {

     var resourceName = "<%= resource_name %>";

     // flag = show all records, or only those that the user created
     <% if can? :manage, model_class  %>
     var showOnlyRecordsCreatedByUser = 0;
     <% else %>
     var showOnlyRecordsCreatedByUser = 1;
     <% end %>

     // Subclass of SDBM.ManageRecords tailored for display of comments (ie users)
     var ManageComments = function(options) {
         SDBM.ManageRecords.call(this, options);
     };
     
     ManageComments.prototype = Object.create(SDBM.ManageRecords.prototype);

     ManageComments.prototype.getColumns = function() {
        var manageRecords = this;

        return [
            {
                title: '<input type="checkbox" id="select-all" class="hideIfReviewed">',
                orderable: false,
                className: 'text-center unreviewed_only',
                render: function (data, type, full, meta) {
                    if(manageRecords.getUnreviewedOnly() === 1) {
                        return '<input type="checkbox" name="review" value="' + full[manageRecords.dataTable.getColumnIndex("ID")] + '"/>';
                    }
                    return '';
                },
                width: "5%"
            },
            {
                title: 'Options',
                orderable: false,
                render: function (data, type, full, meta) {
                    var str = '<a class="btn btn-xs btn-success" href="/' + manageRecords.options.resourceName + '/' + full[manageRecords.dataTable.getColumnIndex("ID")] + '/edit/">Edit</a> '
                            + ' <a class="delete-link btn btn-xs btn-danger" href="/' + manageRecords.options.resourceName + '/' + full[manageRecords.dataTable.getColumnIndex("ID")] + '.json">Delete</a>';
                    return str;
                },
                width: "10%"
            },
            {
                sdbmssMinWidth: "100px",
                title: 'ID',
                dbSortField: 'id'
            },
            {
                sdbmssMinWidth: "100px",
                //orderable: false,
                title: 'Record',
                render: function (data, type, full, meta) {
                    var url = full[manageRecords.dataTable.getColumnIndex("Options")]
                    return "<a target='_blank' href='" + url + "'>" + data + "</a>";
                },
                dbSortField: 'commentable_id'
            },
/*            {
                sdbmssMinWidth: "100px",
                //orderable: false,
                title: 'Entry ID',
                render: function (data, type, full, meta) {
                    if (!full[manageRecords.dataTable.getColumnIndex("Entry ID")] && !full[manageRecords.dataTable.getColumnIndex("Manuscript ID")] && !full[manageRecords.dataTable.getColumnIndex("Source ID")]  && !full[manageRecords.dataTable.getColumnIndex("Name ID")] ) {
                        return "<span class='text-danger'>(record deleted)</span>"
                    }
                    else if (data) {
                        return "<a target='_blank' href='/entries/" + data + "'>SDBM_" + data + "</a>";
                    }
                    return "";
                },
                dbSortField: 'entry'
            },
            {
                sdbmssMinWidth: "100px",
                //orderable: false,
                title: 'Manuscript ID',
                render: function (data, type, full, meta) { 
                    if (!full[manageRecords.dataTable.getColumnIndex("Entry ID")] && !full[manageRecords.dataTable.getColumnIndex("Manuscript ID")] && !full[manageRecords.dataTable.getColumnIndex("Source ID")]  && !full[manageRecords.dataTable.getColumnIndex("Name ID")] ) {
                        return "<span class='text-danger'>(record deleted)</span>"
                    }
                    else if(data) {
                        return "<a target='_blank' href='/manuscripts/" + data + "'>SDBM_MS_" + data + "</a>";
                    }
                    return "";
                },
                dbSortField: 'manuscript'
            },
            {
                sdbmssMinWidth: "100px",
                //orderable: false,
                title: 'Source ID',
                render: function (data, type, full, meta) { 
                    if (!full[manageRecords.dataTable.getColumnIndex("Entry ID")] && !full[manageRecords.dataTable.getColumnIndex("Manuscript ID")] && !full[manageRecords.dataTable.getColumnIndex("Source ID")]  && !full[manageRecords.dataTable.getColumnIndex("Name ID")] ) {
                        return "<span class='text-danger'>(record deleted)</span>"
                    }
                    else if(data) {
                        return "<a target='_blank' href='/sources/" + data + "'>SDBM_SOURCE_" + data + "</a>";
                    }
                    return "";
                },
                dbSortField: 'manuscript'
            },
            {
                sdbmssMinWidth: "100px",
                //orderable: false,
                title: 'Name ID',
                render: function (data, type, full, meta) { 
                    if (!full[manageRecords.dataTable.getColumnIndex("Entry ID")] && !full[manageRecords.dataTable.getColumnIndex("Manuscript ID")] && !full[manageRecords.dataTable.getColumnIndex("Source ID")]  && !full[manageRecords.dataTable.getColumnIndex("Name ID")] ) {
                        return "<span class='text-danger'>(record deleted)</span>"
                    }
                    else if(data) {
                        return "<a target='_blank' href='/names/" + data + "'>SDBM_NAME_" + data + "</a>";
                    }
                    return "";
                },
                dbSortField: 'manuscript'
            },*/
            {
                sdbmssMinWidth: "400px",
                sdbmssMaxWidth: "400px",
                //orderable: false,
                title: 'Comment',
                dbSortField: 'comment'
            },/*
            {
                sdbmssMinWidth: "100px",
                sdbmssMaxWidth: "100px",
                title: 'Is Correction',
                dbSortField: 'is_correction'
            },*/
            {
                sdbmssMinWidth: "100px",
                sdbmssMaxWidth: "100px",
                title: 'Is Accepted',
                dbSortField: 'is_accepted'
            },
            {
                sdbmssMinWidth: "90px",
                sdbmssMaxWidth: "90px",
                title: 'Approved',
                dbSortField: 'reviewed'
            },
            {
                sdbmssMinWidth: "130px",
                sdbmssMaxWidth: "130px",
                title: 'Added By',
                dbSortField: 'created_by'
            },
            {
                sdbmssMinWidth: "130px",
                sdbmssMaxWidth: "130px",
                title: 'Added On',
                dbSortField: 'created_at'
            },
            {
                sdbmssMinWidth: "90px",
                sdbmssMaxWidth: "90px",
                title: 'Updated By',
                dbSortField: 'updated_by',
                //orderable: false
            },
            {
                sdbmssMinWidth: "90px",
                sdbmssMaxWidth: "90px",
                title: 'Updated On',
                dbSortField: 'updated_at',
                //orderable: false
            }
        ];
     };

     ManageComments.prototype.searchResultToTableRow = function (result) {
         return [
             null,
             result.commentable_url,
             result.id,
             result.commentable_id,
             //result.entry_id,
             //result.manuscript_id,
             //result.source_id,
             //result.name_id,
             result.comment,
             //result.is_correction,
             result.is_accepted,
             result.reviewed.toString(),
             result.created_by || "",
             result.created_at || "",
             result.updated_by || "",
             result.updated_at || ""
         ];
     };

     ManageComments.prototype.getButtonTextForAddNewRecord = function () {
         return null;
     };

     new ManageComments({
         resourceName: "<%= resource_name %>",
         resourceNameSingular: "<%= resource_name.singularize %>",
         resourceNamePlural: "<%= resource_name.pluralize %>",
         showOnlyRecordsCreatedByUser: showOnlyRecordsCreatedByUser,
         searchNameField: "name"
     });

 });

</script>

