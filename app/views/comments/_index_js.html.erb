<script type="text/javascript">

 $(document).ready(function() {

     var resourceName = "<%= resource_name %>";

     // flag = show all records, or only those that the user created
     <% if can? :manage, model_class  %>
     var showOnlyRecordsCreatedByUser = 0;
     <% else %>
     var showOnlyRecordsCreatedByUser = 1;
     <% end %>

     // Subclass of SDBM.ManageRecords tailored for display of comments (ie users)
     var ManageComments = function(options) {
         SDBM.ManageRecords.call(this, options);
     };
     
     ManageComments.prototype = Object.create(SDBM.ManageRecords.prototype);

     ManageComments.prototype.getColumns = function() {
        var manageRecords = this;

        return [
            {
                title: '',
                orderable: false,
                render: function (data, type, full, meta) {
                    if(manageRecords.getUnreviewedOnly() === 1) {
                        return '<input type="checkbox" name="review" value="' + full[manageRecords.dataTable.getColumnIndex("ID")] + '"/>';
                    }
                    return '';
                },
                width: "5%"
            },
            {
                title: 'Options',
                orderable: false,
                render: function (data, type, full, meta) {
                    var str = '<a href="/' + manageRecords.options.resourceName + '/' + data + '/edit/">Edit</a> '
                            + '&middot; <a class="delete-link" href="/' + manageRecords.options.resourceName + '/' + data + '.json">Delete</a>';
                    return str;
                },
                width: "10%"
            },
            {
                sdbmssMinWidth: "100px",
                title: 'ID',
                dbSortField: 'id'
            },
            {
                sdbmssMinWidth: "100px",
                orderable: false,
                title: 'Entry ID',
                render: function (data, type, full, meta) { 
                    if (data) {
                        return "<a target='_blank' href='/entries/" + data + "'>SDBM_" + data + "</a>";
                    }
                    return "";
                }
            },
            {
                sdbmssMinWidth: "100px",
                orderable: false,
                title: 'Manuscript ID',
                render: function (data, type, full, meta) { 
                    if(data) {
                        return "<a target='_blank' href='/manuscripts/" + data + "'>SDBM_MS_" + data + "</a>";
                    }
                    return "";
                }
            },
            {
                sdbmssMinWidth: "400px",
                sdbmssMaxWidth: "400px",
                orderable: false,
                title: 'Comment'
            },
            {
                sdbmssMinWidth: "100px",
                sdbmssMaxWidth: "100px",
                title: 'Is Correction',
                dbSortField: 'is_correction'
            },
            {
                sdbmssMinWidth: "90px",
                sdbmssMaxWidth: "90px",
                title: 'Reviewed',
                dbSortField: 'reviewed'
            },
            {
                sdbmssMinWidth: "130px",
                sdbmssMaxWidth: "130px",
                title: 'Created By',
                dbSortField: 'created_by_id'
            },
            {
                sdbmssMinWidth: "130px",
                sdbmssMaxWidth: "130px",
                title: 'Created At',
                dbSortField: 'created_at'
            }
        ];
     };

     ManageComments.prototype.searchResultToTableRow = function (result) {
         return [
             null,
             result.id,
             result.id,
             result.entry_id,
             result.manuscript_id,
             result.comment,
             result.is_correction,
             result.reviewed.toString(),
             result.created_by || "",
             result.created_at || ""
         ];
     };

     ManageComments.prototype.getButtonTextForAddNewRecord = function () {
         return null;
     };

     new ManageComments({
         resourceName: "<%= resource_name %>",
         resourceNameSingular: "<%= resource_name.singularize %>",
         resourceNamePlural: "<%= resource_name.pluralize %>",
         showOnlyRecordsCreatedByUser: showOnlyRecordsCreatedByUser,
         searchNameField: "name"
     });

 });

</script>

