<% content_for :head do %>
<%= stylesheet_link_tag "extras", media: "all" %>
<%= javascript_include_tag "extras" %>
<script type="text/javascript">

$(document).ready(function() {

    SDBM.setPageFullWidth();

    $("input[name='search_value']").val("");

    var jumpToEntry = {
        search: false
    };

    var showUnapprovedOnly = function() {
        return $("input[name='unapproved_only']").is(":checked");
    };
    
    // Fielded search specific params
    var translateSearchParams = function (sdbmTable, data) {
        params = sdbmTable.translateParamsToBlacklight(data);

        params["op"] = $("select[name='op']").val();
    
        $(".search-fieldset").each(function(idx, element) {
            var search_field = $(element).find("select[name='search_field']").first().val();
            var search_value = $(element).find("input[name='search_value']").first().val();
            if(search_value) {
                params[search_field] = search_value;
            }
        });

        params["approved"] = showUnapprovedOnly() ? "false" : "*";
        
        return params;
    };

    // 'Jump to' specific params
    var translateJumpToParams = function (sdbmTable, data) {
        params = sdbmTable.translateParamsToBlacklight(data);

        params['entry_id'] = jumpToEntry.query;

        return params;
    };
    
    var sdbmTable = new SDBM.EntryTable("#search_results", {
        prependColumns: [
            {
                sdbmssMinWidth: "25px",
                sdbmssMaxWidth: "25px",
                title: '',
                orderable: false,
                render: function (data, type, full, meta) {
                    if(showUnapprovedOnly()) {
                        return '<input type="checkbox" name="approve" value="' + full[sdbmTable.getColumnIndex("ID")] + '"/>';
                    }
                    return '';
                }
            },
            {
                sdbmssMinWidth: "150px",
                sdbmssMaxWidth: "150px",
                title: 'Actions',
                orderable: false,
                render: function (data, type, full, meta) {
                    var entryId = full[sdbmTable.getColumnIndex("ID")];
                    var manuscriptId = full[sdbmTable.getColumnIndex("Manuscript")];
                    var linkingToolURL = manuscriptId ? '/linkingtool/manuscript/' + manuscriptId : '/linkingtool/entry/' + entryId;

                    var showLinkingTool = full[sdbmTable.getColumnIndex("Is Approved")] === true;
                    var linkingToolHTMLLink = ' &middot; <a class="find-or-create-manuscript-link" href="' + linkingToolURL + '" target="_blank">Linking Tool</a>';

                    return '<a href="/entries/' + entryId + '/edit" target="_blank">Edit</a>' +
                           ' &middot; <a class="entry-delete-link" href="#" target="_blank">Delete</a>' +
                           (showLinkingTool ? linkingToolHTMLLink : '');
                }
            }
        ],
        ajax: function (sdbmTable, dt_params, callback, settings) {
            $("#spinner").show();

            // seems like there should be a way to do this conditional
            // ajax and subsequent searchAndUpdateTable using
            // promises, but I can't figure that out right now
            
            if(jumpToEntry.search) {
                var entry_id = $("#jump_to").val();
                $.ajax({
                    url: '/admin_search/calculate_bounds',
                    type: 'POST',
                    data: {
                        entry_id: entry_id,
                        per_page: $("select[name='search_results_length']").val(),
                    },
                    success: function(data, textStatus, jqXHR) {
                        jumpToEntry.entry_id = entry_id;
                        jumpToEntry.query = '[' + data.lower_bound + ' TO ' + data.upper_bound + ']';

                        var params = translateJumpToParams(sdbmTable, dt_params);
                        sdbmTable.searchAndUpdateTable(params, callback, {
                            'complete': function () {
                                $("#spinner").hide();
                            }
                        });
                    },
                    error: function() {
                        // TODO: fill this out
                        alert("An error occurred jumping to this record.");
                    }
                });
            } else {
                var params = translateSearchParams(sdbmTable, dt_params);                
                sdbmTable.searchAndUpdateTable(params, callback, {
                    complete: function () {
                        $("#spinner").hide();

                        if(showUnapprovedOnly()) {
                            $(".approve-control").show();
                        } else {
                            $(".approve-control").hide();
                        }
                    }
                });
            }
        }
    });

    var doSearch = function(isJumpSearch) {
        jumpToEntry.search = isJumpSearch;
        sdbmTable.reload();
    };
    
    $('#search_results').on('draw.dt', function () {
        if(jumpToEntry.search) {
            var entry_id = String(jumpToEntry.entry_id);
            // highlight the row
            sdbmTable.dataTable.rows().nodes().each(function (row, idx, api) {
                var data = sdbmTable.dataTable.row(row).data();
                if(String(data[sdbmTable.getColumnIndex("ID")]) === entry_id) {
                    $(row).addClass("selected");
                    $(".dataTables_scrollBody").scrollTop(idx * sdbmTable.getRowHeight());
                }
            });
        }
    });
    
    $('#search_submit').click(function() {
        doSearch(false);
    });

    $("#jump_to").keydown(function(e) {
        if(e.keyCode == 13) {
            doSearch(true);
            e.preventDefault();
            return false;
        }
    });

    $("#jump_submit").click(function () {
        doSearch(true);
    });

    $(document).on("click", ".entry-delete-link", function (event) {
        var row_data = sdbmTable.dataTable.row($(event.target).closest("tr")).data();
        var entry_id = row_data[1];
        if(confirm("Are you sure you want to delete entry " + entry_id + "?")) {
            $.ajax({
                url: '/entries/' + entry_id,
                type: 'DELETE',
                error: function() {
                    // TODO: fill this out
                    alert("An error occurred deleting this record.");
                },
                complete: function() {
                    sdbmTable.reload();
                }
            });
        }
        return false;
    });

    $(document).on('click', "#select-all", function(event) {
        $("input[name='approve']").prop("checked", true);
        return false;
    });

    $(document).on('click', "#deselect-all", function(event) {
        $("input[name='approve']").prop("checked", false);
        return false;
    });

    $(document).on('click', "#mark-as-approved", function(event) {
        var ids = [];
        $("input[name='approve']:checked").each(function (idx, element) {
            ids.push($(element).val());
        });
        
        if(ids.length > 0) {
            // TODO: spinner
            $.ajax({
                url: '/entries/mark_as_approved.json',
                type: 'POST',
                data: { ids: ids },
                success: function(data, textStatus, jqXHR) {
                    sdbmTable.reload();
                },
                error: function() {
                    // TODO: fill this out
                    alert("An error occurred marking records as reviewed");
                }
            });
        }

        return false;
    });

});

</script>
<% end %>

<form class="form-horizontal search-form">
    <div class="row form-group search-fieldset original">
        <div class="col-sm-1">
            <label class="control-label">Search</label>
        </div>
        <div class="col-sm-4">
            <input class="form-control" name="search_value" value="" size="70" type="text">
        </div>
        <div class="col-sm-2">
            <select class="form-control" name="search_field">
            <%- search_fields_for_advanced_search.sort.each do |key, field_def| -%>
            <option value="<%= key %>"><%= field_def.label %></option>
            <%- end -%>
            </select>
        </div>
        <div class="col-sm-4">
            <div>
                Match <select class="form-control" style="width: 100px; display: inline" name="op"><option value="AND">all</option><option value="OR">any</option></select>
                of these fields
            </div>
        </div>
    </div>

    <div class="row form-group search-fieldset">
        <div class="col-sm-4 col-sm-offset-1">
            <input class="form-control" name="search_value" value="" size="70" type="text">
        </div>
        <div class="col-sm-2">
            <select class="form-control" name="search_field">
            <%- search_fields_for_advanced_search.sort.each do |key, field_def| -%>
            <option value="<%= key %>"><%= field_def.label %></option>
            <%- end -%>
            </select>
        </div>
        <div class="col-sm-3">
            <label class="checkbox-inline">
                <input id="unapproved_only" name="unapproved_only" type="checkbox" value="1" />Limit to records needing approval
            </label>
        </div>
    </div>

    <div class="row form-group search-fieldset">
        <div class="col-sm-4 col-sm-offset-1">
            <input class="form-control" name="search_value" value="" size="70" type="text">
        </div>
        <div class="col-sm-2">
            <select class="form-control" name="search_field">
            <%- search_fields_for_advanced_search.sort.each do |key, field_def| -%>
            <option value="<%= key %>"><%= field_def.label %></option>
            <%- end -%>
            </select>
        </div>
        <div class="col-sm-1">
            <button id="search_submit" class="btn btn-primary">Search</button>
        </div>
        <div class="col-sm-1">
            <div>
                <img id="spinner" alt="working..." style="display: none;" src="<%= asset_path "spinner.gif" %>"/>
            </div>
        </div>
        <div class="col-sm-1 text-right">
            <label class="control-label">Jump to ID</label>
        </div>
        <div class="col-sm-1">
            <input class="form-control" type="text" id="jump_to"/>
        </div>
        <div class="col-sm-1">
            <button id="jump_submit" class="btn btn-primary">Go</button>
        </div>
    </div>

    <div class="row form-group search-fieldset approve-control" style="display: none;">
        <div class="col-sm-2 col-sm-offset-1">
            <a href="#" id="select-all">Select All</a> / <a href="#" id="deselect-all">Deselect All</a>
        </div>
        <div class="col-sm-2 col-sm-offset-1">
            <a class="btn btn-primary btn-xs" id="mark-as-approved" class="btn btn-primary">Mark checked records as approved</a>
        </div>
    </div>

</form>

<table id="search_results" class="sdbm-table table dataTable table-striped table-bordered nowrap compact" width="100%" cellspacing="0">
    <thead>
        <tr>
            <!-- we populate TH elements dynamically -->
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>
