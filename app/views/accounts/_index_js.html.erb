<script type="text/javascript">

 $(document).ready(function() {

     var showInactive = "<%= params[:show_inactive] %>";
     var resourceName = "<%= resource_name %>";

     // flag = show all records, or only those that the user created
     <% if can? :manage, model_class  %>
     var showOnlyRecordsCreatedByUser = 0;
     <% else %>
     var showOnlyRecordsCreatedByUser = 1;
     <% end %>

     // Subclass of SDBM.ManageRecords tailored for display of accounts (ie users)
     var ManageAccounts = function(options) {
         SDBM.ManageRecords.call(this, options);
         var manageRecords = this;
     };


     
     ManageAccounts.prototype = Object.create(SDBM.ManageRecords.prototype);

     ManageAccounts.prototype.getColumns = function() {
        var manageRecords = this;

        return [
            {
                sdbmssMinWidth: "20px",
                sdbmssMaxWidth: "20px",
                title: '<input type="checkbox" id="select-all" class="hideIfReviewed">',
                className: 'text-center unreviewed_only',
                orderable: false,
                render: function (data, type, full, meta) {
                    //if(manageRecords.getUnreviewedOnly() === 1) {
                        return '<input type="checkbox" name="review" value="' + full[manageRecords.dataTable.getColumnIndex("ID")] + '"/>';
                    //}
                    //return '';
                }
            },
            {
                sdbmssMinWidth: "120px",
                sdbmssMaxWidth: "120px",
                title: 'Options',
                orderable: false,
                render: function (data, type, full, meta) {
                    var str = '<a class="btn btn-xs btn-success" href="/' + manageRecords.options.resourceName + '/' + data + '/edit/">Edit</a> '
                    //        + '<span class="btn btn-xs btn-danger disable-link" href="/' + manageRecords.options.resourceName + '/' + data + '">Disable</span>';
                    return str;
                }
            },
            {
                sdbmssMinWidth: "50px",
                sdbmssMaxWidth: "50px",
                title: 'ID',
                dbSortField: 'id',
                render: function (data) {
                    // fix me: should this just go to the user profile?
                    return '<a href="/accounts/' + data + '/edit">' + data + '</a>';    
                } 
            },
            {
                sdbmssMinWidth: "150px",
                sdbmssMaxWidth: "150px",
                title: 'Username',
                dbSortField: manageRecords.options.searchNameField,
                render: function (data, type, full, meta) {
                    return '<a href="/profiles/' + data + '/">' + data + '</a>';
                }
            },
            {
                sdbmssMinWidth: "150px",
                sdbmssMaxWidth: "150px",
                title: 'Fullname',
                dbSortField: 'fullname'
            },
            {
                sdbmssMinWidth: "150px",
                sdbmssMaxWidth: "150px",
                title: 'User Level',
                dbSortField: 'role'
            },
            {
                title: 'User Groups',
                dbSortField: 'groups',
                render: function (data, type, full, meta) {
                    data = JSON.parse(data);
                    var result = "";
                    for (var i = 0; i < data.length; i++) {
                        result += '<a target="_blank" href="/groups/' + data[i][0] + '">' + data[i][1] + '</a> ';
                    }
                    return result;
                }
            },
            {
                sdbmssMinWidth: "100px",
                sdbmssMaxWidth: "100px",
                title: 'Active',
                dbSortField: 'active'
            },
            {
                sdbmssMinWidth: "100px",
                sdbmssMaxWidth: "100px",
                title: 'Reviewed',
                dbSortField: 'reviewed'
            },
            {
                sdbmssMinWidth: "100px",
                sdbmssMaxWidth: "100px",
                title: 'Created At',
                dbSortField: 'created_at'
            },
            {
                sdbmssMinWidth: "100px",
                sdbmssMaxWidth: "100px",
                title: 'Last Active',
                dbSortField: 'last_sign_in_at'
            }/*,
            {
                sdbmssMinWidth: "100px",
                sdbmssMaxWidth: "100px",
                title: 'Created By',
                dbSortField: 'created_by_id'
            }*/
        ];
     };

     ManageAccounts.prototype.searchResultToTableRow = function (result) {
         return [ null, result.id, result.id, result[this.options.searchNameField], result.fullname, result.role, result.groups, result.active.toString(), result.reviewed.toString(), result.created_at, result.last_sign_in_at ];
     };

    SDBM.ManageRecords.prototype.setFormStateFromURL = function() {
        var manageRecords = this;
        var qs = new URI().query(true);

         $(".search-fieldset").each(function(idx, element) {
             var search_field = $(element).find("select[name='search_field']").first();
             var search_value = $(element).find("input[name='search_value']").first();
             var populated = false;
             search_field.children().each(function (idx, option) {
                 if(!populated && qs[option.value] && qs[option.value].length > 0) {
                     search_field.val(option.value);
                     if (Array.isArray(qs[option.value]) && qs[option.value].length > 0) {
                         search_value.val(qs[option.value].pop());
                         if (qs[option.value].length == 0) qs[option.value] = undefined;
                     } else if ( qs[option.value] != undefined ) {
                        search_value.val(qs[option.value]);
                        qs[option.value] = undefined;
                     }

                     //delete qs[option.value];
                     populated = true;
                 }
             });
         });
        if(qs.unreviewed_only === '1') {
            $("input[name='unreviewed_only']").prop('checked', true);
        }
        manageRecords.showOrHideMarkCheckedRecordsButton();
    };

     new ManageAccounts({
         resourceName: "<%= resource_name %>",
         resourceNameSingular: "<%= resource_name.singularize %>",
         resourceNamePlural: "<%= resource_name.pluralize %>",
         showOnlyRecordsCreatedByUser: showOnlyRecordsCreatedByUser,
         searchNameField: "username",
         showActiveOnly: showInactive ? false : true
     });

 });

</script>
