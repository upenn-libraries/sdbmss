<% content_for :head do %>
<%= stylesheet_link_tag "extras", media: "all" %>
<%= javascript_include_tag "extras" %>

<style>

.navbar { margin-bottom: 10px; }

#main-container.container-fluid .row { padding-left: 15px; padding-right: 15px; }

.search-fieldset { margin-bottom: 8px; }

</style>
<script type="text/javascript">

$(document).ready(function() {

    // TODO: hacks to tweak the Rails layout: figure out a more elegant way?
    $("#search-navbar").remove();
    // make this page take up full width of browser window
    $("#main-container").removeClass("container").addClass("container-fluid");

    var entryId = <%= @entry.id %>;

    // TODO: need a mechanism to update this
    var manuscriptIds = [];
    <% @entry.entry_manuscripts.each do |entry_manuscript| %>
    manuscriptIds.push(<%= entry_manuscript.manuscript_id %>);
    <% end %>

    var displayManuscriptIds = function() {
        if(manuscriptIds.length > 0) {
            console.log(manuscriptIds.join(","));
            $("#manuscript-ids").html(manuscriptIds.map(function (manuscriptId) {
                return "<a href='/manuscripts/" + manuscriptId + "/'>SDBM_MS_" + manuscriptId + "</a>";
            }).join(","));
            $("#manuscript-list").show();
        } else {
            $("#manuscript-list").hide();
        }
    };
    
    var queuedEntries = [
        {
            entry_id: entryId,
            relation_type: 'is'
        }
    ];

    var changeQueueEntry = function (entryId, relation) {
        if(relation != 'unlink') {
            var idAlreadyExists = false;
            $.each(queuedEntries, function (idx, queuedEntry) {
                if(queuedEntry.entry_id == entryId) {
                    queuedEntry.relation_type = relation;
                    idAlreadyExists = true;
                }
            });
            if (!idAlreadyExists) {
                queuedEntries.push({
                    entry_id: entryId,
                    relation_type: relation
                });
            }
        } else {
            deleteQueuedEntry(entryId);            
        }
    };

    var deleteQueuedEntry = function(entryId) {
        var idxToDelete = -1;
        $.each(queuedEntries, function (idx, queuedEntry) {
            if(queuedEntry.entry_id == entryId) {
                idxToDelete = idx;
            }
        });
        if (idxToDelete != -1) {
            queuedEntries.splice(idxToDelete, 1);
        }
    };

    var isQueued = function(entryId, relationType) {
        var queued = false;
        $.each(queuedEntries, function (idx, queuedEntry) {
            if(queuedEntry.entry_id == entryId && queuedEntry.relation_type == relationType) {
                queued = true;
            }
        });
        return queued;
    };
    
    var potentialMatches = null;

    var getRadioButtonHTML = function(sdbmTable, data, value) {
        var entryId = data[sdbmTable.getColumnIndex("ID")];
        var checked = isQueued(entryId, value) ? "checked='checked'" : "";
        return '<input type="radio" class="toggle-entry-link" data-entry-id="' + entryId + '" name="entry_id_' + entryId + '" value="' + value + '" ' + checked + '/>';
    };

    // Fielded search specific params
    var translateSearchParams = function (sdbmTable, data) {
        params = sdbmTable.translateParamsToBlacklight(data);

        if(potentialMatches == null) {
            params["op"] = $("select[name='op']").val();

            $("select[name='search_field']").each(function (idx, element) {
                var search_field = $(element).val();
                var search_value = $($("input[name='search_value']")[idx]).val();
                if(search_value) {
                    params[search_field] = search_value;
                }
            });
        } else {
            console.log("Doing Potential Match search");
            params["entry_id"] = potentialMatches.join(" OR ");
        }
        
        return params;
    };

    var queueTable = new SDBMEntryTable("#queue", {
        dom: '<"clear">JRt',
        height: '135px',
        fixedColumns: 5,
        prependColumns: [
            {
                sdbmssMinWidth: "60px",
                title: 'Link',
                "data": null,
                "orderable": false,
                "className": 'text-center',
                "render": function (data, type, full, meta) {
                    return getRadioButtonHTML(queueTable, data, "is");
                }
            },
            {
                sdbmssMinWidth: "70px",
                title: 'Fragment',
                "data": null,
                "orderable": false,
                "className": 'text-center',
                "render": function (data, type, full, meta) {
                    return getRadioButtonHTML(queueTable, data, "partial");
                }
            },
            {
                sdbmssMinWidth: "70px",
                title: 'Possible',
                "data": null,
                "orderable": false,
                "className": 'text-center',
                "render": function (data, type, full, meta) {
                    return getRadioButtonHTML(queueTable, data, "possible");
                }
            },
            {
                sdbmssMinWidth: "60px",
                title: 'Unlink',
                "data": null,
                "orderable": false,
                "className": 'text-center',
                "render": function (data, type, full, meta) {
                    return getRadioButtonHTML(queueTable, data, "unlink");
                }
            }
        ],
        ajax: function (sdbmTable, dt_params, callback, settings) {
            $("#spinner").show();

            var params = sdbmTable.translateParamsToBlacklight(dt_params);

            params.entry_id = $.map(queuedEntries, function(item) { return item.entry_id; }).join(" OR ");

            sdbmTable.searchAndUpdateTable(params, callback, {
                'complete': function () {
                    $("#spinner").hide();
                }
            });
        }
    });

    var resultsTable = new SDBMEntryTable("#search_results", {
        dom: '<"clear"><"H"r>JRt<"F"ip>',
        height: function() {
            // height gets passed into dataTables constructor before
            // it's had a chance to construct all its crazy DOM bits,
            // so it's hard to calculate height dynamically to fit the
            // viewport. This seems pretty decent.
            var footer_size = 100;
            return $(window).height() - $("#search_results").offset().top - footer_size;
        },
        fixedColumns: 2,
        prependColumns: [
            {
                sdbmssMinWidth: "290px",
                title: 'Options',
                "data": null,
                "orderable": false,
                "render": function (data, type, full, meta) {
                    var entryId = data[resultsTable.getColumnIndex("ID")];
                    var manuscriptId = data[resultsTable.getColumnIndex("Manuscript")];
                    if(manuscriptId) {
                        if (manuscriptIds.indexOf(manuscriptId) == -1) {
                            return '<a href="#" data-manuscript-id="' + manuscriptId + '" class="link-to-manuscript-link">Link to SDBM_MS_' + manuscriptId + '</a>';
                        } else {
                            return 'Already linked';
                        }
                    } else {
                        return '<a href="#" data-entry-id="' + entryId + '" class="queue-entry-link">Add to queue</a>';
                    }
                    return "";
                }
            }
        ],
        ajax: function (sdbmTable, dt_params, callback, settings) {
            $("#spinner").show();

            // seems like there should be a way to do this conditional
            // ajax and subsequent searchAndUpdateTable using
            // promises, but I can't figure that out right now
            
            var params = translateSearchParams(sdbmTable, dt_params);                
            sdbmTable.searchAndUpdateTable(params, callback, {
                'complete': function () {
                    $("#spinner").hide();
                }
            });
        }
    });

    var doSearch = function() {
        potentialMatches = null;
        resultsTable.reload();
    };
    
    $('#search_results tbody').on('click', 'tr', function (event) {
        // don't select if a link inside table was clicked
        if(event.target.tagName !== 'A') {
            $(event.currentTarget).toggleClass('selected');
        }
    });
    
    $('#search_submit').click(function() {
        doSearch();
    });

    $(document).on("click", ".queue-entry-link", function (event) {
        var entryId = $(event.target).data("entryId");
        changeQueueEntry(entryId, "is");
        queueTable.reload();
    });

    $(document).on("click", ".toggle-entry-link", function (event) {
        var entryId = $(event.target).data("entryId");
        var value = $(event.target).val();
        changeQueueEntry(entryId, value);
        queueTable.reload();
    });

    $(document).on("click", ".dequeue-entry-link", function (event) {
        var entryId = $(event.target).data("entryId");
        changeQueueEntry(entryId, "unlink");
        queueTable.reload();
        return false;
    });

    $(document).on("click", ".link-to-manuscript-link", function (event) {
        var manuscriptId = $(event.target).data("manuscriptId");

        $.ajax({
            url: "/entry_manuscripts.json",
            type: 'POST',
            contentType: "application/json",
            dataType: "json",
            data: JSON.stringify({
                entry_manuscript: {
                    manuscript_id: manuscriptId,
                    entry_id: entryId,
                    relation_type: 'is',
                }
            }),
            success: function(data, textStatus, jqXHR) {
                $("#linked-to-manuscript-modal .entry-id").text(entryId);
                $("#linked-to-manuscript-modal .manuscript-id").text(manuscriptId);
                $("#linked-to-manuscript-modal").modal('show');
                resultsTable.reload();
            },
            error: function() {
                // TODO: fill this out
                alert("An error occurred creating a manuscript.");
            }
        });

        return false;
    });

    $("#create-manuscript-link").click(function (event) {
        if(queuedEntries.length > 1) {
            $.ajax({
                url: '/manuscripts.json',
                type: 'POST',
                contentType: "application/json",
                dataType: "json",
                data: JSON.stringify({
                    entry_manuscripts: queuedEntries
                }),
                success: function(data, textStatus, jqXHR) {
                    alert("Manuscript " + data.manuscript_id + " successfully created! Redirecting to manuscript page now.");
                    window.location = "/manuscripts/" + data.manuscript_id + "/edit";
                },
                error: function() {
                    // TODO: fill this out
                    alert("An error occurred creating a manuscript.");
                }
            });
        } else {
            alert("Creating a Manuscript requires more than 1 entry. Queue some entries and try again.");
        }
        return false;
    });

    $("#show-matches").click(function () {
        $("#spinner").show();
        $.ajax({
            url: '/entries/' + entryId + '/similar.json',
            type: 'GET',
            success: function(data, textStatus, jqXHR) {
                if(data.similar.length > 0)  {
                    potentialMatches = data.similar;
                    resultsTable.reload();
                } else {
                    alert("No matches found");
                }
            },
            error: function() {
                // TODO: fill this out
                alert("An error occurred finding matches.");
            },
            complete: function() {
                $("#spinner").hide();
            }
        });
    });

    $("#show-more-search-fields-link").click(function() {
        if($("#show-more-search-fields-link").text().match(/Show/)) {
            $("#show-more-search-fields-link").text("Hide additional search fields");
            $(".more-search-fields").show();
        } else {
            $("#show-more-search-fields-link").text("Show more search fields");
            $(".more-search-fields").hide();
        }
        return false;
    });
    
    $('#queue_wrapper .dataTables_scrollBody').on('scroll', function (event) {
        $("#search_results_wrapper .dataTables_scrollBody").scrollLeft($(event.target).scrollLeft());
    });
    $('#search_results_wrapper .dataTables_scrollBody').on('scroll', function (event) {
        $("#queue_wrapper .dataTables_scrollBody").scrollLeft($(event.target).scrollLeft());
    });
    
    displayManuscriptIds();

    // TODO: this doesn't work
    // $(window).bind('resize', function () {
    //     console.log("RESIZED!");
    //     var NewHeight = getViewportHeight() - table_height_buffer;
    //     var oSettings = table.settings();
    //     console.log(table.settings());
    // next line is wrong: figure out where scrollY is stored?
    //     oSettings.oScroll.sY = NewHeight + "px";
    //     table.fnDraw();
    // });

});

</script>
<% end %>

<div style="width: 100%;">
    <h4 style="float: left">Linking Tool: <%= @entry.public_id %> (find and create manuscripts)</h4>
    <h4 id="manuscript-list" style="float: right">NOTE: entry is already linked to <span id="manuscript-ids"></span></h4>
</div>
<div style="clear: both"/>

<form class="form-horizontal search-form">
        <div style="height: 28px">
            <label style="width: 60px">Search</label>
            <input name="search_value" value="" size="30" type="text">
            <select name="search_field">
            <%- search_fields_for_advanced_search.sort.each do |key, field_def| -%>
            <option value="<%= key %>"><%= field_def.label %></option>
            <%- end -%>
            </select>
            <button id="search_submit">Search</button>
            <img id="spinner" alt="working..." style="display: none;" src="<%= asset_path "spinner.gif" %>"/>
            <button id="show-matches" style="margin-left: 40px">Show potential matches</button>
        </div>
        <div style="display: none; height: 28px" class="more-search-fields">
            <span style="width: 60px; display: inline-block;">&nbsp;</span>
            <input name="search_value" value="" size="30" type="text">
            <select name="search_field">
            <%- search_fields_for_advanced_search.sort.each do |key, field_def| -%>
            <option value="<%= key %>"><%= field_def.label %></option>
            <%- end -%>
            </select>
        </div>
        <div style="display: none; height: 28px" class="more-search-fields">
            <span style="width: 60px; display: inline-block;">&nbsp;</span>
            <input name="search_value" value="" size="30" type="text">
            <select name="search_field">
            <%- search_fields_for_advanced_search.sort.each do |key, field_def| -%>
            <option value="<%= key %>"><%= field_def.label %></option>
            <%- end -%>
            </select>
            <div style="display: inline-block">
                Match <select style="width: 100px; display: inline" name="op"><option value="AND">all</option><option value="OR">any</option></select>
                of these fields
            </div>
        </div>
        <div>
            <a href="#" id="show-more-search-fields-link">Show more search fields</a>
        </div>
</form>

<div style="margin-bottom: 6px">
    <span style="font-size: 16px; font-weight: bold;">Entries Queued for Creating New Manuscript Record</span>
    <button id="create-manuscript-link"style="margin-left: 40px">Create Manuscript</button>
</div>

<table id="queue" class="sdbm-table table dataTable table-striped table-bordered nowrap compact" width="100%" cellspacing="0">
    <thead>
        <tr>
            <!-- we populate TH elements dynamically -->
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>

<div style="margin-bottom: 6px; margin-top: 15px;">
    <span style="font-size: 16px; font-weight: bold;">Search Results</span>
</div>

<table id="search_results" class="sdbm-table table dataTable table-striped table-bordered nowrap compact" width="100%" cellspacing="0">
    <thead>
        <tr>
            <!-- we populate TH elements dynamically -->
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>

<div class="modal fade" id="linked-to-manuscript-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Successfully Linked</h4>
            </div>
            <div class="modal-body">

                <p>Link between SDBM_<span class="entry-id"></span> and SDBM_MS_<span class="manuscript-id"></span> successfully created.</p>

                <p><a href="#"  data-dismiss="modal">Return to linking tool</a></p>

                <p><a href="">Go to page for SDBM_MS_<span class="manuscript-id"></span> now</a></p>
            </div>
            <!--
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
            -->
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
