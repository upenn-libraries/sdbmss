<% content_for :head do %>
<%= stylesheet_link_tag "extras", media: "all" %>
<%= javascript_include_tag "extras" %>

<style>

.navbar { margin-bottom: 10px; }

#main-container.container-fluid .row { padding-left: 15px; padding-right: 15px; }

.search-fieldset { margin-bottom: 8px; }

</style>
<script type="text/javascript">

$(document).ready(function() {

    // TODO: hacks to tweak the Rails layout: figure out a more elegant way?
    $("#search-navbar").remove();
    // make this page take up full width of browser window
    $("#main-container").removeClass("container").addClass("container-fluid");

    var entryId = <%= @entry.id %>;

    var queuedEntries = [
        {
            entry_id: entryId,
            relation_type: 'is'
        }
    ];

    var deleteQueuedEntry = function(entryId) {
        var idxToDelete = -1;
        $.each(queuedEntries, function (idx, queuedEntry) {
            if(queuedEntry.entry_id == entryId) {
                idxToDelete = idx;
            }
        });
        if (idxToDelete != -1) {
            queuedEntries.splice(idxToDelete, 1);
        }
    };

    var isQueued = function(entryId, relationType) {
        var queued = false;
        $.each(queuedEntries, function (idx, queuedEntry) {
            if(queuedEntry.entry_id == entryId && queuedEntry.relation_type == relationType) {
                queued = true;
            }
        });
        return queued;
    };
    
    var displayQueuedEntries = function() {
        queuedEntries.sort(function (a, b) {
            if(a.entry_id > b.entry_id) return 1;
            if(a.entry_id < b.entry_id) return -1;
            return 0;
        });
        var html = $.map(queuedEntries, function (record) {
            var entryId = record.entry_id;
            var relation_str = "";
            if(record.relation_type != 'is') {
                relation_str = " (" + record.relation_type + ")";
            }
            return "<a href='/entries/" + entryId + "' target='_blank'>SDBM_" + entryId + relation_str + "</a> (<a class='dequeue-entry-link' data-entry-id='" + entryId + "' href='#'>remove</a>)";
        }).join(", ");
        $("#queued-entries").html(html);
    };

    var potentialMatches = null;

    // prefill the search form
    $("input[name='search_value']").first().val(entryId);
    $("select[name='search_field']").first().val("entry_id");
    $("select[name='op']").val("OR");

    var radioButtonsShouldBeVisible = function (sdbmTable, row) {
        return !row[sdbmTable.getColumnIndex("Manuscript")];
    };

    var getRadioButtonHTML = function(sdbmTable, data, value) {
        if (radioButtonsShouldBeVisible(sdbmTable, data)) {
            var entryId = data[sdbmTable.getColumnIndex("ID")];
            var checked = isQueued(entryId, value) ? "checked='checked'" : "";
            return '<input type="radio" class="toggle-entry-link" data-entry-id="' + entryId + '" name="entry_id_' + entryId + '" value="' + value + '" ' + checked + '/>';
        }
        return '';
    };

    // Fielded search specific params
    var translateSearchParams = function (sdbmTable, data) {
        params = sdbmTable.translateParamsToBlacklight(data);

        if(potentialMatches == null) {
            params["op"] = $("select[name='op']").val();

            $("select[name='search_field']").each(function (idx, element) {
                var search_field = $(element).val();
                var search_value = $($("input[name='search_value']")[idx]).val();
                if(search_value) {
                    params[search_field] = search_value;
                }
            });
        } else {
            console.log("Doing Potential Match search");
            params["entry_id"] = potentialMatches.join(" OR ");
        }
        
        return params;
    };

    var sdbmTable = new SDBMEntryTable("#search_results", {
        prependColumns: [
            {
                title: 'Link',
                "data": null,
                "orderable": false,
                "className": 'text-center',
                "render": function (data, type, full, meta) {
                    return getRadioButtonHTML(sdbmTable, data, "is");
                }
            },
            {
                title: 'Fragment',
                "data": null,
                "orderable": false,
                "className": 'text-center',
                "render": function (data, type, full, meta) {
                    return getRadioButtonHTML(sdbmTable, data, "partial");
                }
            },
            {
                title: 'Possible',
                "data": null,
                "orderable": false,
                "className": 'text-center',
                "render": function (data, type, full, meta) {
                    return getRadioButtonHTML(sdbmTable, data, "possible");
                }
            },
            {
                title: 'Unlink',
                "data": null,
                "orderable": false,
                "className": 'text-center',
                "render": function (data, type, full, meta) {
                    return getRadioButtonHTML(sdbmTable, data, "unlink");
                }
            },
            {
                sdbmssMinWidth: "160px",
                title: 'Existing',
                "data": null,
                "orderable": false,
                "render": function (data, type, full, meta) {
                    console.log("in render");
                    var manuscriptId = data[sdbmTable.getColumnIndex("Manuscript")];
                    if(manuscriptId) {
                        return '<a href="#" data-manuscript-id="' + manuscriptId + '" class="link-to-manuscript-link">Link to SDBM_MS_' + manuscriptId + '</a>';
                    }
                    return "";
                }
            }
        ],
        ajax: function (sdbmTable, dt_params, callback, settings) {
            $("#spinner").show();

            // seems like there should be a way to do this conditional
            // ajax and subsequent searchAndUpdateTable using
            // promises, but I can't figure that out right now
            
            var params = translateSearchParams(sdbmTable, dt_params);                
            sdbmTable.searchAndUpdateTable(params, callback, {
                'complete': function () {
                    $("#spinner").hide();
                }
            });
        }
    });

    var doSearch = function() {
        potentialMatches = null;
        sdbmTable.reload();
    };
    
    $('#search_results tbody').on('click', 'tr', function (event) {
        // don't select if a link inside table was clicked
        if(event.target.tagName !== 'A') {
            $(event.currentTarget).toggleClass('selected');
        }
    });

    $('#search_submit').click(function() {
        doSearch();
    });

    $(document).on("click", ".toggle-entry-link", function (event) {
        var entryId = $(event.target).data("entryId");
        var value = $(event.target).val();
        //console.log("changed " + entryId + ", value=" + value);

        if(value != 'unlink') {
            var idAlreadyExists = false;
            $.each(queuedEntries, function (idx, queuedEntry) {
                if(queuedEntry.entry_id == entryId) {
                    queuedEntry.relation_type = value;
                    idAlreadyExists = true;
                }
            });
            if (!idAlreadyExists) {
                queuedEntries.push({
                    entry_id: entryId,
                    relation_type: value
                });
            }
        } else {
            deleteQueuedEntry(entryId);            
        }
        displayQueuedEntries();
    });

    $(document).on("click", ".dequeue-entry-link", function (event) {
        var entryId = $(event.target).data("entryId");
        deleteQueuedEntry(entryId);
        displayQueuedEntries();
        return false;
    });

    $(document).on("click", ".link-to-manuscript-link", function (event) {
        var manuscriptId = $(event.target).data("manuscriptId");

        $.ajax({
            url: "/entry_manuscripts.json",
            type: 'POST',
            contentType: "application/json",
            dataType: "json",
            data: JSON.stringify({
                entry_manuscript: {
                    manuscript_id: manuscriptId,
                    entry_id: entryId,
                    relation_type: 'is',
                }
            }),
            success: function(data, textStatus, jqXHR) {
                alert("Link between SDBM_" + entryId + "and SDBM_MS_" + manuscriptId + " successfully created! Redirecting to manuscript page now.");
                window.location = "/manuscripts/" + manuscriptId + "/edit";
            },
            error: function() {
                // TODO: fill this out
                alert("An error occurred creating a manuscript.");
            }
        });

        return false;
    });

    $("#create-manuscript-link").click(function (event) {
        if(queuedEntries.length > 1) {
            $.ajax({
                url: '/manuscripts.json',
                type: 'POST',
                contentType: "application/json",
                dataType: "json",
                data: JSON.stringify({
                    entry_manuscripts: queuedEntries
                }),
                success: function(data, textStatus, jqXHR) {
                    alert("Manuscript " + data.manuscript_id + " successfully created! Redirecting to manuscript page now.");
                    window.location = "/manuscripts/" + data.manuscript_id + "/edit";
                },
                error: function() {
                    // TODO: fill this out
                    alert("An error occurred creating a manuscript.");
                }
            });
        } else {
            alert("Creating a Manuscript requires more than 1 entry. Queue some entries and try again.");
        }
        return false;
    });

    $("#show-matches").click(function () {
        $("#spinner").show();
        $.ajax({
            url: '/entries/' + entryId + '/similar.json',
            type: 'GET',
            success: function(data, textStatus, jqXHR) {
                if(data.similar.length > 0)  {
                    potentialMatches = data.similar;
                    potentialMatches.push.apply(potentialMatches, $.map(queuedEntries, function (queuedEntry) {
                        return queuedEntry.entry_id;
                    }));
                    sdbmTable.reload();
                } else {
                    alert("No matches found");
                }
            },
            error: function() {
                // TODO: fill this out
                alert("An error occurred finding matches.");
            },
            complete: function() {
                $("#spinner").hide();
            }
        });
    });
    
    displayQueuedEntries();

    // TODO: this doesn't work
    // $(window).bind('resize', function () {
    //     console.log("RESIZED!");
    //     var NewHeight = getViewportHeight() - table_height_buffer;
    //     var oSettings = table.settings();
    //     console.log(table.settings());
    // next line is wrong: figure out where scrollY is stored?
    //     oSettings.oScroll.sY = NewHeight + "px";
    //     table.fnDraw();
    // });

});

</script>
<% end %>

<h3>Find or Create a Manuscript to link to <%= @entry.public_id %></h3>

<form class="form-horizontal search-form">
    <div class="row form-group search-fieldset original">
        <div class="col-sm-1">
            <label class="control-label">Search</label>
        </div>
        <div class="col-sm-4">
            <input class="form-control" name="search_value" value="" size="70" type="text">
        </div>
        <div class="col-sm-2">
            <select class="form-control" name="search_field">
            <%- search_fields_for_advanced_search.sort.each do |key, field_def| -%>
            <option value="<%= key %>"><%= field_def.label %></option>
            <%- end -%>
            </select>
        </div>
        <div class="col-sm-2">
            <div>
                Match <select class="form-control" style="width: 100px; display: inline" name="op"><option value="AND">all</option><option value="OR">any</option></select>
                of these fields
            </div>
        </div>
        <div class="col-sm-3 text-right">
            <a class="btn btn-primary" href="#" id="create-manuscript-link">Create new Manuscript with these Entries</a>
        </div>
    </div>

    <div class="row form-group search-fieldset">
        <div class="col-sm-4 col-sm-offset-1">
            <input class="form-control" name="search_value" value="" size="70" type="text">
        </div>
        <div class="col-sm-2">
            <select class="form-control" name="search_field">
            <%- search_fields_for_advanced_search.sort.each do |key, field_def| -%>
            <option value="<%= key %>"><%= field_def.label %></option>
            <%- end -%>
            </select>
        </div>
        <div class="col-sm-5 text-right">
            Queued: <span id="queued-entries"></span>
        </div>
    </div>

    <div class="row form-group search-fieldset">
        <div class="col-sm-4 col-sm-offset-1">
            <input class="form-control" name="search_value" value="" size="70" type="text">
        </div>
        <div class="col-sm-2">
            <select class="form-control" name="search_field">
            <%- search_fields_for_advanced_search.sort.each do |key, field_def| -%>
            <option value="<%= key %>"><%= field_def.label %></option>
            <%- end -%>
            </select>
        </div>
        <div class="col-sm-1">
            <button id="search_submit" class="btn btn-primary">Search</button>
        </div>
        <div class="col-sm-1">
            <div>
                <img id="spinner" alt="working..." style="display: none;" src="<%= asset_path "spinner.gif" %>"/>
            </div>
        </div>
        <div class="col-sm-3">
            <button id="show-matches" class="btn btn-primary">Show potential matches</button>
        </div>
    </div>

</form>

<table id="search_results" class="sdbm-table table dataTable table-striped table-bordered nowrap compact" width="100%" cellspacing="0">
    <thead>
        <tr>
            <!-- we populate TH elements dynamically -->
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>
