<script type="text/javascript">

 $(document).ready(function() {

     var resourceName = "<%= resource_name %>";

     // flag = show all records, or only those that the user created
     <% if can? :manage, model_class  %>
         var onlyMine = 0;
     <% else %>
         var onlyMine = 1;
     <% end %>

     SDBM.ManageRecords.prototype.getColumns = function () {
        var manageRecords = this;

        return [
            {
                title: '<input type="checkbox" id="select-all" class="hideIfReviewed">',//'<a href="#" class="btn btn-default btn-blank btn-xs glyphicon glyphicon-unchecked hideIfReviewed" id="select-all"></a>',
                orderable: false,
                className: "text-center unreviewed_only",
                render: function (data, type, full, meta) {
                    //if(manageRecords.getUnreviewedOnly() === 1) {
                        /*return  '' + 
                                '<input class="table-checkbox" type="checkbox" name="review" value="' + full[manageRecords.dataTable.getColumnIndex("ID")] + '" id="checkbox_' + meta.row + '"/>' + 
                                '<label for="checkbox_' + meta.row + '">' + 
                                '<a class="btn btn-default btn-xs btn-blank glyphicon glyphicon-unchecked unchecked"></a>' + 
                                '<a class="btn btn-default btn-xs btn-blank glyphicon glyphicon-check checked"></a>' + 
                                '</label>' + '';*/
                        return '<input type="checkbox" name="review" value="' + full[manageRecords.dataTable.getColumnIndex("ID")] + '"/>';
                    //}
                    //return '';
                },
                width: "5%"
            },
            {
                title: 'Options',
                orderable: false,
                render: function (data, type, full, meta) {
                    var str = '<a class="btn btn-xs btn-success" href="/' + manageRecords.options.resourceName + '/' + data + '/edit/">Edit</a> '
                            + ' <a class="delete-link btn btn-xs btn-danger" href="/' + manageRecords.options.resourceName + '/' + data + '.json">Delete</a>';
                    return str;
                },
                width: "10%"
            },
            {
                title: 'ID',
                width: "8%",
                dbSortField: 'id',
                render: function (data, type, full, meta) {
                    // /console.log("here", data, type, full, meta);
                    var str = '<a href="/' + manageRecords.options.resourceName + '/' + data + '">' + data + '</a>';
//                    console.log(str);
                    return str;
                }
            },
            {
                title: 'Name',
                width: "45%",
                dbSortField: manageRecords.options.searchNameField
            },
            {
                title: 'Count',
                width: "10%",
                dbSortField: 'entries_count'
            },
            {
                title: 'Approved',
                width: "10%",
                dbSortField: 'reviewed'
            },
            {
                title: 'Problem',
                width: "10%",
                dbSortField: 'problem'
            },
            {
                title: 'Parent',
                width: "10%",
                dbSortField: 'parent',
                render: function (data, type, full, meta) {
                    if (data)
                        return '<a class="" href="/places/' + data.id + '" target="_blank">' + data.name + '</a> ';
                    else
                        return "";
                }
            },
            {
                title: 'Latitude',
                width: "10%",
                dbSortField: 'latitude'
            },
            {
                title: 'Longitude',
                width: "10%",
                dbSortField: 'longitude'
            },
            {
                title: 'Authority Id',
                width: "10%",
                dbSortField: 'problem',
                render: function (data, type, full, meta) {
                    if (data) {
                        var base = full[manageRecords.dataTable.getColumnIndex("Authority Source")];
                        console.log(base);
                        return '<a class="" href="' + base + '/' + data + '" target="_blank">' + data + '</a> ';
                    }
                    else
                        return "";
                }
            },
            {
                title: "Evidence",
                width: "15%",
                orderable: false
            },
            {
                title: 'Added By',
                width: "10%",
                dbSortField: 'created_by'
            },
            {
                title: 'Added On',
                width: "10%",
                dbSortField: 'created_at'
            },
            {
                title: 'Updated By',
                width: "10%",
                dbSortField: 'updated_by'
            },
            {
                title: 'Updated On',
                width: "10%",
                dbSortField: 'updated_at'
            },
            {
                title: 'Authority Source',
                width: "10%",
                dbSortField: 'problem',
                visible: false
            }
        ];
    };

    // translates a search result object into an Array used to populate datatable
    SDBM.ManageRecords.prototype.searchResultToTableRow = function (result) {
        return [ null, result.id, result.id, result[this.options.searchNameField], result.entries_count || 0, result.reviewed, result.problem, result.parent, result.latitude, result.longitude, result.authority_id, result.evidence, result.created_by || "", result.created_at || "", result.updated_by || "", result.updated_at || "", result.authority_source ];
    };

    new SDBM.ManageRecords({
        resourceName: "<%= resource_name %>",
        resourceNameSingular: "<%= resource_name.singularize %>",
        resourceNamePlural: "<%= resource_name.pluralize %>",
        showOnlyRecordsCreatedByUser: onlyMine,
        searchNameField: "name"
    });
});

</script>
