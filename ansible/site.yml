---
- name: "Provision Docker Swarm Cluster"
  hosts: all
  become: true
  collections:
    - ansible.utils
    - ansible.netcommon
  tasks:
    - ansible.builtin.import_tasks: "provision_docker.yml"

- name: "Bootstrap Solr server/s"
  hosts: all
  become: true
  gather_facts: false
  tasks:
    - name: Create folders for solr swarm
      when: not (is_development | default (false, true)) and (hostvars[inventory_hostname].swarm_labels | select('search', 'solr-') | length > 0)
      block:
        - name: "Get volume node labels"
          set_fact:
            node_labels: "{{ hostvars[inventory_hostname].swarm_labels | select('search', 'solr-') }}"

        - name: "Get volume groups"
          set_fact:
            volume_groups: "{{ volume_groups | default([]) + (swarm_manager_solr_docker_volume_settings | json_query(query)) }}"
          vars:
            query: "[?node_label == '{{ item }}'].{backup_device: backup_volume.driver_opts.device, data_device: data_volume.driver_opts.device}"
          loop: "{{ node_labels }}"

        - name: "Get volumes"
          set_fact:
            volumes: "{{ volumes | default([]) + (item | dict2items | default([]) | map(attribute='value') | default([])) }}"
          loop: "{{ volume_groups }}"

        - name: Create a directory if it does not exist
          ansible.builtin.file:
            path: "{{ item }}"
            state: directory
            mode: "0775"
          loop: "{{ volumes }}"
      vars:
        swarm_manager_host: "{{ groups | dict2items | selectattr('key', 'search', 'docker_swarm_manager') | map(attribute='value') | flatten | first }}"
        swarm_manager_solr_docker_volume_settings: "{{ hostvars[swarm_manager_host].solr_docker_volume_settings | default({}) }}"

- name: "Deploy application"
  hosts: docker_swarm_manager
  become: true
  gather_facts: true
  tasks:
    - ansible.builtin.import_role:
        name: app
        tasks_from: symlink_project
      tags: app
    - ansible.builtin.import_role:
        name: traefik
      tags: traefik
    - ansible.builtin.import_role:
        name: zookeeper
      tags: zookeeper
    - ansible.builtin.import_role:
        name: solr
      tags: solr
    - ansible.builtin.import_role:
        name: mysql
      tags: mysql
    - ansible.builtin.import_role:
        name: rabbitmq
      tags: rabbitmq
    - ansible.builtin.import_role:
        name: jena
      tags: jena
    - ansible.builtin.import_role:
        name: interface
      tags: interface
    - ansible.builtin.import_role:
        name: app
      tags: app
  post_tasks:
    - name: Recursively remove project directory
      ansible.builtin.file:
        path: "{{ project_root }}"
        state: absent
    - name: Prune images that are older than 2+ hours
      community.docker.docker_prune:
        images: true
        images_filters:
          dangling: false
          until: 2h
      when: not is_development | default (false, true)
